imports:
  projects: projects.yml
  plans: plans.yml
  commons: commons.yml

services:
  http:
    SubscriptionService:
      auth: true
      base-path: /projects/{project}/
      path-parameters:
        project: 
          type: projects.ProjectId
          docs: The unique identifier for the project.
      endpoints:
        listAll:
          display-name: List all subscriptions
          docs: Returns a list of subscriptions. The subscriptions returned are sorted by creation date, with the most recently created subscriptions appearing first.
          path: /subscriptions
          request:
            name: ListAllSubscriptionsRequest
            query-parameters:
              after: 
                docs: A cursor for use in pagination. The `after` parameter takes an object ID that defines the position in the list, only items immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: A cursor for use in pagination. The `before` parameter takes an object ID that defines the position in the list, only items immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: The limit of items to be returned in the list, between 0 and 200. `>= 0` `<= 200`. Default is `10`.
                type: optional<integer> 
              plan:
                docs: The unique identifier for the plan to be filtered by.
                type: optional<plans.PlanId>
              sim:
                docs: The unique identifier for the sim to be filtered by.
                type: optional<commons.SimId>
              status:
                docs: A comma-separated list of statuses to filter the subscriptions by. Only pending and active subscriptions are returned by default. Default is `pending` `active`.
                type: optional<SubscriptionStatus>
              user:
                docs: The unique identifier for the user to be filtered by.
                type: optional<string>
          method: GET
          response:
            type: Subscription
            docs: Returns a list of subscriptions. The subscriptions returned are sorted by creation date, with the most recently created subscriptions appearing first.
          examples:
            - path-parameters:
                project: gigs
              response: 
                body:
                  object: list
                  items:
                    - object: subscription
                      id: sub_0SNlurA049MEWV2gSfSxi00xlPIi
                      currentPeriod:
                        number: 1
                        start: '2021-01-21T19:32:13Z'
                        end: '2021-02-20T19:38:34Z'
                      phoneNumber: '+25411865216434'
                      plan: pln_0SNlurA049MEWV3V0q7gjQbM4EVo
                      porting: prt_0SNlurA049MEWV39s2kSYqaat7ZS
                      sim: sim_0SNlurA049MEWV1BAAmWZULA4lf6
                      status: pending
                      user: usr_0SNlurA049MEWV4OpCwsNyC9Kn2d
                      activatedAt: '2021-01-21T19:38:34Z'
                      canceledAt: '2021-01-29T13:22:51Z'
                      createdAt: '2021-01-21T19:32:13Z'
                      endedAt: '2021-02-20T19:38:34Z'
                      firstUsageAt: '2021-01-21T19:38:34Z'
                  moreItemsAfter: null
                  moreItemsBefore: null
types: 
  SubscriptionId: string
  SubscriptionStatus: 
    enum: 
      - pending
      - active
      - ended
  Subscription: 
    properties:
      object: 
        type: string
        docs: Type of object is always `list`.
      items:
        type: list<SubscriptionItem>
        docs: List of objects of type `subscription`.
      moreItemsAfter: 
        type: optional<string>
        docs: A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items.
      moreItemsBefore:
        type: optional<string>
        docs: A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items.
  SubscriptionItem: 
    properties:
      object:
        type: string
        docs: Type of object is always `subscription`.
      id:
        type: SubscriptionId
        docs: Unique identifier for the subscription.
      currentPeriod: optional<CurrentPeriod>
      phoneNumber:
        type: string
        docs: The phone number attached to the SIM in E.164 format. Only available for voice plans.
      plan: string #TODO model the nested object
      porting:
        type: optional<string>
        docs: Unique identifier for the porting.
      sim: string #TODO model the nested object
      status: 
        type: SubscriptionStatus
        docs: The current status of the subscription.
      user: string #TODO model the nested object
      activatedAt:
        type: datetime
        docs: Time when the subscription was activated.
      canceledAt:
        type: datetime
        docs: Time when the subscription was canceled.
      createdAt:
        type: datetime
        docs: Time when the subscription was created.
      endedAt:
        type: datetime
        docs: Time when the subscription was ended.
      firstUsageAt:
        type: datetime
        docs: Time when the subscription was first used.
      
  CurrentPeriod: 
    properties:
      number:
        type: integer 
        docs: Sequence number of the subscription period.
      start:
        type: datetime
        docs: Beginning of the current subscription period.
      end:
        type: datetime 
        docs: End of the current subscription period.